<?php

namespace Shortly;

require_once dirname(__FILE__) . '/../../src/Api.php';
require_once dirname(__FILE__) . '/../../src/MyDB.php';
require_once dirname(__FILE__) . '/../../src/Generator.php';

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-10-05 at 04:50:22.
 */
class ApiTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Api
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        copy(dirname(__FILE__) . "/../shortlyTest.db", dirname(__FILE__) . "/../test.db");
        MyDB::getInstance(dirname(__FILE__) . "/../test.db");
        $this->object = new Api();
        $_POST = array();
        $_PUT = array();
        $_SERVER['HTTP_HOST'] = '';
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers Shortly\Api::get
     * @todo   Implement testGet().
     */
    public function testGet() {
        $data = $this->object->get();
        $this->assertEmpty($data);
    }

    /**
     * @covers Shortly\Api::post
     * @todo   Implement testPost().
     */
    public function testPost() {
        $time = time();
        $key = Generator::getUniqueID($time);
        $_POST["url"] = "http://cnn.com";
        $_POST["device"] = "Desktop";
        $data = $this->object->post();
        $this->assertTrue(strlen($data)>0);
    }

    /**
     * @covers Shortly\Api::put
     * @todo   Implement testPut().
     */
    public function testPut() {
        $_POST["url"] = "http://cnn.com";
        $_POST["device"] = "Desktop";
        $data = $this->object->post();
        $this->assertTrue(strlen($data)>0);
        $keys = preg_split("/\//", $data);
        $key = $keys[1];

        $file = "/tmp/".tmpfile();
        file_put_contents($file, '{"key":"RANDOMKEY","device":"Mobile","url":"m.cnn.com"}');
        $status = $this->object->put($file);
        $this->assertEquals("Failed", $status);

        file_put_contents($file, '{"key":"'.$key.'","device":"Mobile","url":"m.cnn.com"}');
        $status = $this->object->put($file);
        $this->assertEquals("Updated", $status);
    }

}
